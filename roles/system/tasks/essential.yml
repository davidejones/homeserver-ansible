---
- name: Update and upgrade packages
  apt:
    update_cache: yes
    upgrade: yes
    autoremove: yes

- name: Check if reboot required
  stat:
    path: /var/run/reboot-required
  register: reboot_required_file

- name: Reboot if required
  reboot:
    msg: Rebooting due to a kernel update
  when: reboot_required_file.stat.exists

- name: Install packages
  package:
    name: "{{ packages }}"
    state: present

# Remove EXTERNALLY-MANAGED file if we're on Debian12
# Related issue: https://github.com/geerlingguy/ansible-role-pip/issues/57
- name: Get python3 version installed
  ansible.builtin.command: python3 --version
  register: py3ver

- name: Remove EXTERNALLY-MANAGED
  ansible.builtin.file:
    path: /usr/lib/python3.11/EXTERNALLY-MANAGED
    state: absent
  when: py3ver is defined and py3ver.stdout.find("3.11") != -1
#######################

- name: Install pip packages
  ansible.builtin.pip:
    name: "{{ pip_packages }}"
    state: present

- name: Free port 53
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: "^#DNS="
    line: "DNS=1.1.1.1"

- name: Free port 53 Part 2
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/systemd/resolved.conf
    regexp: "^#DNSStubListener=yes"
    line: "DNSStubListener=no"

- name: Create symbolic link
  shell: sudo ln -sf /run/systemd/resolve/resolv.conf /etc/resolv.conf

- name: Mount additional disks
  mount:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    fstype: "{{ item.fstype }}"
    state: mounted
    passno: "2"
  with_items: "{{ disks }}"
  when: disks[0] is defined

- name: Reboot the server
  ansible.builtin.reboot:
    msg: "Rebooting server to free port"
